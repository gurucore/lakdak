{"mappings":";;;;;;;;;;;;;;;;AAIO,SAAS,0CAAM,GAAG,IAAI;IAC3B,IAAI,QAAQ,GAAG,CAAC,QAAQ,KAAK,cAC3B,QAAQ,KAAK,CAAC,0CAAgC;AAGlD;AAEO,MAAM;IACX,OAAO,eAAe;QACpB,OAAO,GAAG,IAAI,OAAO,WAAW,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA,GAAA,oBAAK,KAAK;IACnE;IAEA,mDAAmD,GACnD,OAAO,YAAY,CAAW,EAAE,WAAW,KAAK,EAAE;QAChD,MAAM,OAAO,IAAI,QAAQ;QACzB,MAAM,OAAO,IAAI,WAAM;QAEvB,OAAO,OAAQ,CAAA,WAAW,OAAO,EAAC;IACpC;IAEA;;;GAGC,GACD,OAAO,MAAM,GAAW,EAAW;QACjC,IAAI;YACF,IAAI,IAAI;YACR,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO;QACT;IACF;IAEA;;;GAGC,GACD,OAAO,gBAAgB,GAAW,EAAW;QAC3C,IAAI,CAAC,KAAK,MAAM,MAAM;QAEtB,kDAAkD;QAClD,IAAI,CAAA,GAAA,qCAAG,EAAE,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,QACjE,OAAO;QAET,OAAO;IACT;AACF","sources":["src/libs/UtilHelper.ts"],"sourcesContent":["import path from 'path'\r\nimport { nanoid } from 'nanoid'\r\n\r\n/** noticable log in DEBUG environment */\r\nexport function DEBUG(...args) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.debug('\\x1b[36müêû ------ \\x1b[0m', ...args)\r\n    // [‚ÑπÔ∏è]\r\n  }\r\n}\r\n\r\nexport class UtilHelper {\r\n  static createRandom() {\r\n    return `${new Date().toISOString().substring(0, 10)}_${nanoid()}`\r\n  }\r\n\r\n  /** convert true false to yes/no or icon of yes/no */\r\n  static boolToYesNo(b?: boolean, withText = false) {\r\n    const text = b ? 'yes' : 'no '\r\n    const icon = b ? '‚úÖ' : 'üö´'\r\n\r\n    return icon + (withText ? text : '')\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a valid URL.\r\n   * @param str The string to check.\r\n   */\r\n  static isURL(str: string): boolean {\r\n    try {\r\n      new URL(str)\r\n      return true\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a string is a valid file path. Just file name like \"file\" or \"file.txt\" is false. \"c:/file\" is true\r\n   * @param str The string to check.\r\n   */\r\n  static isLocalFilePath(str: string): boolean {\r\n    if (!str) throw Error('argument \"str\" is empty')\r\n\r\n    // Check if it's an absolute path or relative path\r\n    if (path.isAbsolute(str) || str.startsWith('./') || str.startsWith('../')) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"UtilHelper.0e44d41f.js.map","sourceRoot":"../"}